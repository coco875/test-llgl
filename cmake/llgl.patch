diff --git a/CMakeLists.txt b/CMakeLists.txt
index c9217d14..2ff5525c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,7 +16,7 @@ if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.16")
     if(APPLE)
         project(LLGL LANGUAGES C CXX OBJC OBJCXX)
     elseif(WIN32)
-        project(LLGL LANGUAGES C CXX CSharp)
+        project(LLGL LANGUAGES C CXX)
     else()
         project(LLGL LANGUAGES C CXX)
     endif()
@@ -90,7 +90,7 @@ endif()
 
 # === Build path ===
 
-set(LLGL_OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/build" CACHE PATH "Override binary output directory")
+# set(LLGL_OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/build" CACHE PATH "Override binary output directory")
 
 set( EXTERNAL_MODULE_DIR            "${PROJECT_SOURCE_DIR}/cmake"                   )
 set( PROJECT_INCLUDE_DIR            "${PROJECT_SOURCE_DIR}/include"                 )
diff --git a/include/LLGL/Platform/Win32/Win32NativeHandle.h b/include/LLGL/Platform/Win32/Win32NativeHandle.h
index e6ac30ab..b035cc1d 100644
--- a/include/LLGL/Platform/Win32/Win32NativeHandle.h
+++ b/include/LLGL/Platform/Win32/Win32NativeHandle.h
@@ -25,6 +25,7 @@ namespace LLGL
 struct NativeHandle
 {
     HWND window;
+    HDC hdc;
 };
 
 
diff --git a/sources/Platform/Win32/Win32Window.cpp b/sources/Platform/Win32/Win32Window.cpp
index 86722e52..816432bc 100644
--- a/sources/Platform/Win32/Win32Window.cpp
+++ b/sources/Platform/Win32/Win32Window.cpp
@@ -149,7 +149,8 @@ std::unique_ptr<Window> Window::Create(const WindowDescriptor& desc)
 
 Win32Window::Win32Window(const WindowDescriptor& desc) :
     wnd_   { CreateWindowHandle(desc) },
-    flags_ { desc.flags               }
+    flags_ { desc.flags               },
+    hdc_ { GetDC(wnd_) }
 {
 }
 
@@ -164,6 +165,7 @@ bool Win32Window::GetNativeHandle(void* nativeHandle, std::size_t nativeHandleSi
     {
         auto* handle = static_cast<NativeHandle*>(nativeHandle);
         handle->window = wnd_;
+        handle->hdc   = hdc_;
         return true;
     }
     return false;
diff --git a/sources/Platform/Win32/Win32Window.h b/sources/Platform/Win32/Win32Window.h
index 3e54c2be..c0dbe266 100644
--- a/sources/Platform/Win32/Win32Window.h
+++ b/sources/Platform/Win32/Win32Window.h
@@ -48,6 +48,7 @@ class Win32Window final : public Window
         HWND    parentWnd_  = nullptr;
         HWND    wnd_        = nullptr;
         long    flags_      = 0;
+        HDC                 hdc_                = nullptr;
 
 };
 
diff --git a/sources/Renderer/OpenGL/Platform/Win32/Win32GLContext.cpp b/sources/Renderer/OpenGL/Platform/Win32/Win32GLContext.cpp
index 68bb8fea..5e147756 100644
--- a/sources/Renderer/OpenGL/Platform/Win32/Win32GLContext.cpp
+++ b/sources/Renderer/OpenGL/Platform/Win32/Win32GLContext.cpp
@@ -192,7 +192,7 @@ static HDC GetWin32DeviceContext(Surface& surface)
     NativeHandle nativeHandle = {};
     if (!surface.GetNativeHandle(&nativeHandle, sizeof(nativeHandle)))
         LLGL_TRAP("invalid native Win32 window handle");
-    return ::GetDC(nativeHandle.window);
+    return nativeHandle.hdc;
 }
 
 void Win32GLContext::CreateProxyContext(Surface& surface, const OpenGL::RenderSystemNativeHandle& nativeHandle)
diff --git a/sources/Renderer/OpenGL/Platform/Win32/Win32GLSwapChainContext.cpp b/sources/Renderer/OpenGL/Platform/Win32/Win32GLSwapChainContext.cpp
index 42b8a06e..4c15b041 100644
--- a/sources/Renderer/OpenGL/Platform/Win32/Win32GLSwapChainContext.cpp
+++ b/sources/Renderer/OpenGL/Platform/Win32/Win32GLSwapChainContext.cpp
@@ -42,7 +42,7 @@ Win32GLSwapChainContext::Win32GLSwapChainContext(Win32GLContext& context, Surfac
     /* Get native window handle */
     NativeHandle nativeHandle = {};
     if (surface.GetNativeHandle(&nativeHandle, sizeof(nativeHandle)))
-        hDC_ = ::GetDC(nativeHandle.window);
+        hDC_ = nativeHandle.hdc;
     else
         LLGL_TRAP("failed to get Win32 device context (HDC) from swap-chain surface");
 
diff --git a/tests/Test_OpenGL.cpp b/tests/Test_OpenGL.cpp
index da251f94..ba360f58 100644
--- a/tests/Test_OpenGL.cpp
+++ b/tests/Test_OpenGL.cpp
@@ -53,7 +53,7 @@ int main()
         LLGL::NativeHandle nativeWndHandle = {};
         window->GetNativeHandle(&nativeWndHandle, sizeof(nativeWndHandle));
 
-        HDC dc = ::GetDC(nativeWndHandle.window);
+        HDC dc = nativeWndHandle.hdc;
 
         PIXELFORMATDESCRIPTOR pfd = {};
         pfd.nSize           = sizeof(PIXELFORMATDESCRIPTOR);
